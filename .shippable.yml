language: python

branches:
  only:
    - nrgi
    - staging

env:
  global:
    # Shippable API token used to trigger deploy
    - secure: Kzet68YJ2Lz38O5C5zZTSNcpYi06623KU6ouEmIuw2IYHiuFpYxemuPYobREJvSxFSTmrVsRh/gCgJ20p5b+wKwnWpqFIMd/rmujuwVgOzVy4o8Z1O+Wx4WWyDs00FC6HW+O/jKs5tVkx77hG3xTvlAXfBOP7we/vpZ4i1qF9LOj23CT1ZJluKT3zjDwp8QKNuUJ6oliLeXWpw+0TloMVPqXN4c4giNlGFO65e2ismM2C+Vxj6B7IlwR1CPVv7LYZsgrnYAlxDEfySiFv07ole5LjEPnpmEKGHHKllEpnqNDKqhlnL9DceC8FN/7RGn+rSSyGnTJR6SIzBjDg8aTKw==

build:
  ci:
    # Create the version file
    - ./create_version.sh

    # Pull latest image to be used as cache
    - docker pull nrgi/resourcedata.org:$BRANCH || echo 'Cache not available'

    # Use the `--cache-from` option to use the latest image in the repo as a cache for this build. Available since Docker 1.13
    - docker build -t nrgi/resourcedata.org:$BRANCH.$COMMIT --cache-from nrgi/resourcedata.org:$BRANCH .

    # Create the `latest` tag and force it in case the tag is already there from a previous build
    - docker tag nrgi/resourcedata.org:$BRANCH.$COMMIT nrgi/resourcedata.org:$BRANCH

    - docker push nrgi/resourcedata.org:$BRANCH
    - docker push nrgi/resourcedata.org:$BRANCH.$COMMIT

    # Trigger deploy through building a repo with deploy configuration
    - ./shippable-deploy.sh

integrations:
  hub:
    - integrationName: nrgiDockerHub
      type: docker
  notifications:
    - integrationName: email
      type: email
      recipients:
        - adina@vitaminsoftware.com
      branches:
        only:
          - nrgi
          - staging
          - 395-fix-ckan-build
      on_success: change
      on_failure: always
