language: python

branches:
  only:
    - nrgi
    - staging

env:
  global:
    # Shippable API token used to trigger deploy
    - secure: SZA0qZmjQACdI4vxyq62Ych//alfJlT+7+j973fAKd6S5iSeQ8aeas4f5f3+1bRi1vjpaBNZ+ZOKWDtQnXGdAECf1/Wdw/HexPGtgbM39oDCdrkBZpimaV0wugqlg7AmEPe6GYGgmubnPu5H4txm0wCMHuHsbaWy/0lpz/F3T7jkImfNB/2cL7fiJRrJKXtFeCfR/YFOHIavmC2SGHd+1ZXptH4TGAnAZFQ8FsGf/Om1qMYgbvS45kfvTX6yYzg5bAJh4zwLTicFpj+wisrUrirVIwfgEh9MGjWCHGb8AweCsUdVluxczkwNi08qvpYB9MeniSqrDl31Lh/zi80Tmg==

build:
  ci:
    # Create the version file
    - ./create_version.sh

    # Pull latest image to be used as cache
    - docker pull nrgi/resourcedata.org:$BRANCH || echo 'Cache not available'

    # Use the `--cache-from` option to use the latest image in the repo as a cache for this build. Available since Docker 1.13
    - docker build -t nrgi/resourcedata.org:$BRANCH.$COMMIT --cache-from nrgi/resourcedata.org:$BRANCH .

    # Create the `latest` tag and force it in case the tag is already there from a previous build
    - docker tag nrgi/resourcedata.org:$BRANCH.$COMMIT nrgi/resourcedata.org:$BRANCH

    - docker push nrgi/resourcedata.org:$BRANCH
    - docker push nrgi/resourcedata.org:$BRANCH.$COMMIT

    # Trigger deploy through building a repo with deploy configuration
    - ./shippable-deploy.sh

integrations:
  hub:
    - integrationName: nrgiDockerHub
      type: docker
  notifications:
    - integrationName: email
      type: email
      recipients:
        - nrgi@vitaminsoftware.com
      branches:
        only:
          - nrgi
          - staging
      on_success: change
      on_failure: always
